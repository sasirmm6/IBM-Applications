

CREATE COMPUTE MODULE Looping_with_Referance_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE inputRef REFERENCE TO InputRoot.XMLNSC.student.record;
		DECLARE IncrementalCounter INTEGER 1;
		CREATE FIELD OutputRoot.JSON.Data;
		CREATE FIRSTCHILD OF OutputRoot.JSON.Data DOMAIN('JSON') NAME 'Placements';
		DECLARE outputRef REFERENCE TO OutputRoot.JSON.Data.Placements;
		WHILE LASTMOVE(inputRef) DO
			SET outputRef.Studname=inputRef.name;
			SET outputRef.Studage=inputRef.age;
		IF inputRef.marks>250 THEN
			SET outputRef.Candidate[IncrementalCounter].status='eligible for interview';
			SET outputRef.Candidate[IncrementalCounter].job='eligible fo rjob';
			
		ELSE
			SET outputRef.Candidate[IncrementalCounter].status=' not eligible for interview';
			SET outputRef.Candidate[IncrementalCounter].job=' not eligible for job';
			
		END IF;
		MOVE inputRef NEXTSIBLING REPEAT TYPE;
		SET IncrementalCounter=IncrementalCounter+1;
			
		END WHILE;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;




