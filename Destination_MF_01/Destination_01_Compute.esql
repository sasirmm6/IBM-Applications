

CREATE COMPUTE MODULE Destination_01_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE InputRef REFERENCE TO InputRoot.XMLNSC.order;
		SET OutputRoot.JSON.Data.consigment.code = SUBSTRING(InputRef.itemName FROM 1 FOR 5)||
		                                           SUBSTRING(InputRef.itemDesc FROM 1 FOR 5);
		SET OutputRoot.JSON.Data.consigment.ClusterLocation= InputRef.itemDeliverycluster;
		IF InputRef.itemPaymentType='COD' THEN
			SET OutputRoot.JSON.Data.consigment.IsCOD = 'Yes';
			
		ELSE
			SET OutputRoot.JSON.Data.consigment.IsCOD = 'No';
		END IF;
		 SET OutputRoot.JSON.Data.consigment.DeliveryPincode = InputRef.itemPincode;
		 /*
		 now we are sending message to different queues from input
		 1.CLUST_DEL_SOUTH_Q
		 2.CUST_DEST_Q
		 3.AUDIT_TM_Q
		 */
		 SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName ='CLUST_DEL_'||UCASE(InputRef.itemDeliverycluster)||'_Q';
		 SET OutputLocalEnvironment.Destination.MQ.DestinationData[2].queueName ='CUST_DEST_Q';
		 SET OutputLocalEnvironment.Destination.MQ.DestinationData[3].queueName ='AUDIT_TM_Q';
		
		 
		 
        RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;





